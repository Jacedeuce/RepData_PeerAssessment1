setwd("~/R/Coursera/RepResearch/RepData_PeerAssessment1")
filename <- "activity.csv"
read.csv(filename, stringsAsFactors = FALSE)
filename <- "activity.csv"
data <- read.csv(filename, stringsAsFactors = FALSE)
head(data)
data$datetime <- within(data, datetime <- paste(date, interval, sep=" ")
)
head(data)
setwd("~/R/Coursera/RepResearch/RepData_PeerAssessment1")
filename <- "activity.csv"
data <- read.csv(filename, stringsAsFactors = FALSE)
data$datetime <- paste(data$date, data$interval, sep = " ")
head(data)
data$posdate <- as.POSIXct(strptime(data$datetime, "%Y-%m-%d %M)
)
)
strptime(data$datetime, "%Y-%m-%d %M)
class(datetime)
class(data$datetime)
HM <- data$interval/60
HM
head(data)
data$HM <- data$interval/60
data$HM <- data$interval/60
data$datetime <- paste(data$date, data$HM, sep = " ")
head(data
)
install.packages("dplyr")
pos <- as.POSIXct(strftime(data$datetime, "%Y-%m-%d %H))
pos <- as.POSIXct(strftime(data$datetime, "%Y-%m-%d %H"))
head(pos)
pos <- as.POSIXct(strptime(data$datetime, "%Y-%m-%d %H"))
head(pos)
test <- aggregate(steps ~ date, data = data, sum)
head(test)
filename <- "activity.csv"
data <- read.csv(filename, stringsAsFactors = FALSE)
test <- aggregate(steps ~ date, data = data, sum)
test
?aggregate()
?na.action
getOption("na.action")
test <- aggregate(steps ~ date, data = data, sum, na.action = na.pass)
test
qplot(steps, data=test, geom="histogram")
library(ggplot2)
qplot(steps, data=test, geom="histogram")
qplot(steps, data=test, geom="histogram", binwidth = 50)
qplot(steps, data=test, geom="histogram", binwidth = 500)
?summarise
?ddply
?summarise
mean <- summarise(test, funs(mean, median))
library(dplyr)
mean <- summarise(test, funs(mean, median))
mean <- summarise_each(test, funs(mean, median))
mean
stepsDay <- aggregate(steps ~ date, data = data, sum, na.action = na.omit)
qplot(steps, data=stepsDay, geom="histogram", binwidth = 500)
mean <- summarise_each(stepsDay, funs(mean, median))
mean
?mean
mean <- mean(stepsDay$steps)
mean
median <- median(stepsDay$steps)
median
class(median)
options(scipen=999)
head(data)
stepsTime <- aggregate(steps ~ interval, data = data, sum, na.action = na.omit)
head(stepsTime)
stepsTime <- aggregate(steps ~ interval, data = data, mean, na.action = na.omit)
stepsTime <- aggregate(steps ~ interval, data = data, FUN=mean, na.action = na.omit)
stepsTime <- aggregate(steps ~ interval, data = data, FUN=mean, na.action = na.omit)
library(dplyr)
library(ggplot2)
options(scipen=999, digits = 4)
filename <- "activity.csv"
data <- read.csv(filename, stringsAsFactors = FALSE)
stepsDay <- aggregate(steps ~ date, data = data, sum, na.action = na.omit)
qplot(steps, data=stepsDay, geom="histogram", binwidth = 500)
meanSteps <- mean(stepsDay$steps)
medianSteps <- median(stepsDay$steps)
stepsTime <- aggregate(steps ~ interval, data = data, FUN=mean, na.action = na.omit)
stepsTime
?plot
TSplot <- plot(stepsTime$interval, stepsTime$steps, type = "l")
highestInterval <- stepsTime[stepsTime$steps = max(stepsTime$steps), ]
highestInterval <- stepsTime[stepsTime$steps == max(stepsTime$steps), ]
highestInterval
strptime(highestInterval$interval, %H%M)
strptime(paste("0", highestInterval$interval, sep = ""), %H%M)
strptime(paste("0", highestInterval$interval, sep = " "), %H%M)
as.time(835)
strftime(835, %H%M)
strftime(835, %H %M)
strftime(835, %H)
strftime(835/60, %H)
strftime(highestInterval$interval/60, %H)
strptime(highestInterval$interval/60, %H)
highestInterval$interval/60
strptime(as.character(highestInterval$interval/60), %H)
strptime(as.character(highestInterval$interval/60), format = "%H")
strptime(as.character(highestInterval$interval), format = "%H%M")
strptime(as.character(paste("0", highestInterval$interval, sep = ""), format = "%H%M")
)
strptime(as.character(paste("0", highestInterval$interval, sep = "")), format = "%H%M")
?date_format
maxInterval <- strptime(as.character(paste("0", highestInterval$interval, sep = "")), format = "%H%M")
date_format(format = "%H:%M")
install_packages("scales")
install.packages("scales")
install.packages("scales")
install.packages("scales")
date_format(maxInterval, format = "%H:%M")
library(scales
)
date_format(maxInterval, format = "%H:%M")
maxInterval
as.date(maxInterval)
maxInterval <- POSIXlt(strptime(as.character(paste("0", highestInterval$interval, sep = "")), format = "%H%M"))
maxInterval <- POSIXct(strptime(as.character(paste("0", highestInterval$interval, sep = "")), format = "%H%M"))
maxInterval <- as.POSIXlt(strptime(as.character(paste("0", highestInterval$interval, sep = "")), format = "%H%M"))
maxInterval
date_format(maxInterval, format = "%H:%M")
?date_format
?format
format(maxInterval, format = "%H:%M")
which(is.na(data$steps))
length(which(is.na(data$steps)))
stepsTime
install.packages("Hmisc")
library(Hmisc)
steps2 <- impute(data$steps)
head(steps2)
steps2[1:300]
steps2 <- impute(data$steps, fun=mean)
steps2[1:300]
?arr.ind
ind <- which(is.na(data), arr.ind=TRUE)
data[ind] <- rowMeans(df, na.rm = TRUE)[ind[,1]]
head(ind)
ind <- which(is.na(data))
head(ind)
?spread
install.packages("tidyr")
library(tidyr)
?spread
dataSpread <- spread(data, date, interval)
head(data
)
head(stepsTime)
?ddply
?transform
impute.mean <- function(x) replace(x, is.na(x, mean(x, na.rm = TRUE)
)
)
impute.mean <- function(x) replace(x, is.na(x, mean(x, na.rm = TRUE)))
ddply(data, ~interval, transform, steps = impute.mean(steps))
install.packages("plyr")
install.packages("plyr")
library(plyr
)
impute.mean <- function(x) replace(x, is.na(x, mean(x, na.rm = TRUE)))
ddply(data, ~interval, transform, steps = impute.mean(steps))
library(dplyr)
library(ggplot2)
library(scales)
options(scipen=999, digits = 4)
filename <- "activity.csv"
data <- read.csv(filename, stringsAsFactors = FALSE)
stepsDay <- aggregate(steps ~ date, data = data, sum, na.action = na.omit)
qplot(steps, data=stepsDay, geom="histogram", binwidth = 500)
meanSteps <- mean(stepsDay$steps)
medianSteps <- median(stepsDay$steps)
stepsTime <- aggregate(steps ~ interval, data = data, FUN=mean, na.action = na.omit)
TSplot <- plot(stepsTime$interval, stepsTime$steps, type = "l")
impute.mean <- function(x) replace(x, is.na(x, mean(x, na.rm = TRUE)))
ddply(data, ~interval, transform, steps = impute.mean(steps))
?ddply
?mean
?replace
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
ddply(data, ~interval, transform, steps = impute.mean(steps))
compl.data <- ddply(data, ~interval, transform, steps = impute.mean(steps))
head(compl.data)
compl.data.arr <- arrange(compl.data, date)
compl.data.arr
head(compl.data.arr)
stepsDayComp <- aggregate(steps ~ date, data = compl.data.arr, sum, na.action = na.omit)
qplot(steps, data=stepsDayCompl, geom="histogram", binwidth = 500)
meanStepsComp <- mean(stepsDayComp$steps)
medianStepsComp <- median(stepsDayComp$steps)
qplot(steps, data=stepsDayComp, geom="histogram", binwidth = 500)
meanStepsComp <- mean(stepsDayComp$steps)
medianStepsComp <- median(stepsDayComp$steps)
meanStepsComp
medianStepsComp
library(dplyr)
library(ggplot2)
library(scales)
library(plyr)
library(tidyr)
options(scipen=999, digits = 4)
filename <- "activity.csv"
data <- read.csv(filename, stringsAsFactors = FALSE)
stepsDay <- aggregate(steps ~ date, data = data, sum, na.action = na.omit)
qplot(steps, data=stepsDay, geom="histogram", binwidth = 500)
meanSteps <- mean(stepsDay$steps)
medianSteps <- median(stepsDay$steps)
stepsTime <- aggregate(steps ~ interval, data = data, FUN=mean, na.action = na.omit)
TSplot <- plot(stepsTime$interval, stepsTime$steps, type = "l")
highestInterval <- stepsTime[stepsTime$steps == max(stepsTime$steps), ]
maxInterval <- as.POSIXlt(strptime(as.character(paste("0",
highestInterval$interval, sep = "")), format= "%H%M"))
maxIntTime <- format(maxInterval, format = "%H:%M")
highestInterval$steps
maxIntTime
library(knitr)
library(dplyr)
library(ggplot2)
library(scales)
library(plyr)
library(tidyr)
options(scipen=999, digits = 4)
filename <- "activity.csv"
data <- read.csv(filename, stringsAsFactors = FALSE)
stepsDay <- aggregate(steps ~ date, data = data, sum, na.action = na.omit)
qplot(steps, data=stepsDay, geom="histogram", binwidth = 500)
meanSteps <- mean(stepsDay$steps)
medianSteps <- median(stepsDay$steps)
stepsTime <- aggregate(steps ~ interval, data = data, FUN=mean, na.action = na.omit)
TSplot <- plot(stepsTime$interval, stepsTime$steps, type = "l")
highestInterval <- stepsTime[stepsTime$steps == max(stepsTime$steps), ]
maxInterval <- as.POSIXlt(strptime(as.character(paste("0",
highestInterval$interval, sep = "")), format= "%H%M"))
maxIntTime <- as.character(format(maxInterval, format = "%H:%M"))
highestIntervalSteps <- as.character(highestInterval$steps)
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
compl.data <- ddply(data, ~interval, transform, steps = impute.mean(steps))
compl.data.arr <- arrange(compl.data, date)
stepsDayComp <- aggregate(steps ~ date, data = compl.data.arr, sum, na.action = na.omit)
qplot(steps, data=stepsDayComp, geom="histogram", binwidth = 500)
meanStepsComp <- mean(stepsDayComp$steps)
medianStepsComp <- median(stepsDayComp$steps)
highestIntervalSteps
options(scipen=999, digits = 4)
highestIntervalSteps
highestIntervalSteps <- highestInterval$steps
highestIntervalSteps
highestIntervalSteps <- highestInterval$steps
highestIntervalSteps
highestInterval <- stepsTime[stepsTime$steps == max(stepsTime$steps), ]
library(dplyr)
library(ggplot2)
library(scales)
library(plyr)
library(tidyr)
options(scipen=999)
library(dplyr)
library(ggplot2)
library(scales)
library(plyr)
library(tidyr)
options(scipen=999)
filename <- "activity.csv"
data <- read.csv(filename, stringsAsFactors = FALSE)
stepsDay <- aggregate(steps ~ date, data = data, sum, na.action = na.omit)
qplot(steps, data=stepsDay, geom="histogram", binwidth = 500)
meanSteps <- mean(stepsDay$steps)
medianSteps <- median(stepsDay$steps)
stepsTime <- aggregate(steps ~ interval, data = data, FUN=mean, na.action = na.omit)
TSplot <- plot(stepsTime$interval, stepsTime$steps, type = "l")
highestInterval <- stepsTime[stepsTime$steps == max(stepsTime$steps), ]
maxInterval <- as.POSIXlt(strptime(as.character(paste("0",
highestInterval$interval, sep = "")), format= "%H%M"))
maxIntTime <- as.character(format(maxInterval, format = "%H:%M"))
highestIntervalSteps <- highestInterval$steps
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
compl.data <- ddply(data, ~interval, transform, steps = impute.mean(steps))
compl.data.arr <- arrange(compl.data, date)
stepsDayComp <- aggregate(steps ~ date, data = compl.data.arr, sum, na.action = na.omit)
qplot(steps, data=stepsDayComp, geom="histogram", binwidth = 500)
meanStepsComp <- mean(stepsDayComp$steps)
medianStepsComp <- median(stepsDayComp$steps)
highestIntervalSteps
highestInterval
head(stepsTime)
highestInterval[highestInterval$steps == 206.2,]
highestInterval[highestInterval$interval == 835,]
stepsTime[835,]
stepsTime[interval == 835,]
stepsTime[stepsTime$Interval == 835,]
stepsTime
